#include<iostream>
#include<string>
using namespace std;
class Queue{
	private:
		int rear;
		int front;
		int arr[5];
	public:
		Queue(){
			front=rear=-1;
			for(int i=0;i<5;i++){
				arr[i]=0;
			}
		}
		bool isEmpty(){
			if(front==-1 && rear==-1){
				return true;
			}
			else{
				return false;
			}
		}
		bool isFull(){
			if(rear==4){
				return true;
			}
			else{
				return false;
			}
		}
		void enqueue(int val){
			if(isFull()){
				cout<<"Queue is full"<<endl;
				return;
			}
			else if(isEmpty()){
				rear=front=0;
			}
			else{
			    rear++;
			}
			arr[rear]=val;
		}
		int dequeue(){
		    int x=0;
			if(isEmpty()){
				cout<<"Queue is empty"<<endl;
				return 0;
			}
			else if(front==rear){
				x=arr[front];
				front=rear=-1;
				arr[front]=0;
			}
			else{
			    x=arr[front];
			    arr[front]=0;
			    front++;
			}
			return x;
		}
		int count(){
			return(rear-front+1);
		}
		void display(){
			cout<<"all items in a Queue"<<endl;
			for(int i=0;i<=4;i++){
				cout<<arr[i]<<" ";
			}
		}
};
int main(){
	Queue q1;
	int option,value;
	do{
		cout<<"operation in alist"<<endl;
		cout<<"1.enqueue()"<<endl;
		cout<<"2.dequeue()"<<endl;
		cout<<"3.isEmpty()"<<endl;
		cout<<"4.isFull"<<endl;
		cout<<"5.count()"<<endl;
		cout<<"6.display()"<<endl;
		cout<<"7.clear screen"<<endl;
		cin>>option;
		switch(option){
		    case 0:
		        break;
			case 1:
				cout<<"enter a value"<<endl;
				cin>>value;
				q1.enqueue(value);
				break;
			case 2:
				cout<<"popped element"<<q1.dequeue()<<endl;
				break;
			case 3:
				if(q1.isEmpty()){
					cout<<"Queue is empty"<<endl;
				}
				else{
					cout<<"Queue is not empty"<<endl;
				}
				break;
			case 4:
				if(q1.isFull()){
					cout<<"Queue is full"<<endl;
				}
				else{
					cout<<"Queue is not full"<<endl;
				}
				break;
			case 5:
				cout<<"no of elements in a Queue"<<q1.count()<<endl;
				break;
			case 6:
				q1.display();
				break;
			case 7:
				system("cls");
				break;
			default:
				cout<<"enter proper option number"<<endl;
		}
		
	}while(option!=0);
	return 0;
}
